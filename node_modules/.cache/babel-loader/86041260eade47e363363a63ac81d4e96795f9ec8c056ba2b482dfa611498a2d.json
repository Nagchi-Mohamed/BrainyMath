{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSettings } from '../context/SettingsContext';\nimport { translations } from '../translations';\nexport const useTranslation = () => {\n  _s();\n  const {\n    language\n  } = useSettings();\n  const t = key => {\n    const keys = key.split('.');\n    let value = translations[language];\n    for (const k of keys) {\n      if (value && value[k]) {\n        value = value[k];\n      } else {\n        console.warn(`Translation key not found: ${key}`);\n        return key;\n      }\n    }\n    return value;\n  };\n  return {\n    t\n  };\n};\n_s(useTranslation, \"gGNJZxUrOmAVZqstj8h/kYHglMk=\", false, function () {\n  return [useSettings];\n});","map":{"version":3,"names":["useSettings","translations","useTranslation","_s","language","t","key","keys","split","value","k","console","warn"],"sources":["C:/Users/Han/Desktop/BrainyMathh/src/hooks/useTranslation.js"],"sourcesContent":["import { useSettings } from '../context/SettingsContext';\r\nimport { translations } from '../translations';\r\n\r\nexport const useTranslation = () => {\r\n  const { language } = useSettings();\r\n\r\n  const t = (key) => {\r\n    const keys = key.split('.');\r\n    let value = translations[language];\r\n    \r\n    for (const k of keys) {\r\n      if (value && value[k]) {\r\n        value = value[k];\r\n      } else {\r\n        console.warn(`Translation key not found: ${key}`);\r\n        return key;\r\n      }\r\n    }\r\n    \r\n    return value;\r\n  };\r\n\r\n  return { t };\r\n}; "],"mappings":";AAAA,SAASA,WAAW,QAAQ,4BAA4B;AACxD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGJ,WAAW,CAAC,CAAC;EAElC,MAAMK,CAAC,GAAIC,GAAG,IAAK;IACjB,MAAMC,IAAI,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAIC,KAAK,GAAGR,YAAY,CAACG,QAAQ,CAAC;IAElC,KAAK,MAAMM,CAAC,IAAIH,IAAI,EAAE;MACpB,IAAIE,KAAK,IAAIA,KAAK,CAACC,CAAC,CAAC,EAAE;QACrBD,KAAK,GAAGA,KAAK,CAACC,CAAC,CAAC;MAClB,CAAC,MAAM;QACLC,OAAO,CAACC,IAAI,CAAC,8BAA8BN,GAAG,EAAE,CAAC;QACjD,OAAOA,GAAG;MACZ;IACF;IAEA,OAAOG,KAAK;EACd,CAAC;EAED,OAAO;IAAEJ;EAAE,CAAC;AACd,CAAC;AAACF,EAAA,CApBWD,cAAc;EAAA,QACJF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}