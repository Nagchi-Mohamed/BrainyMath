{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Han\\\\Desktop\\\\BrainyMathh\\\\src\\\\context\\\\SettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsContext = /*#__PURE__*/createContext();\nexport const useSettings = () => {\n  _s();\n  const context = useContext(SettingsContext);\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n};\n_s(useSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SettingsProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const saved = localStorage.getItem('darkMode');\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [language, setLanguage] = useState(() => {\n    return localStorage.getItem('language') || 'en';\n  });\n  useEffect(() => {\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n    document.body.classList.toggle('dark-mode', isDarkMode);\n  }, [isDarkMode]);\n  useEffect(() => {\n    localStorage.setItem('language', language);\n  }, [language]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const changeLanguage = lang => {\n    setLanguage(lang);\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleDarkMode,\n      language,\n      changeLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s2(SettingsProvider, \"Pi265fgLujUT6V2DVVAQP6cFi7U=\");\n_c = SettingsProvider;\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","SettingsContext","useSettings","_s","context","Error","SettingsProvider","children","_s2","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","language","setLanguage","setItem","stringify","document","body","classList","toggle","toggleDarkMode","prev","changeLanguage","lang","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Han/Desktop/BrainyMathh/src/context/SettingsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst SettingsContext = createContext();\r\n\r\nexport const useSettings = () => {\r\n  const context = useContext(SettingsContext);\r\n  if (!context) {\r\n    throw new Error('useSettings must be used within a SettingsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SettingsProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    const saved = localStorage.getItem('darkMode');\r\n    return saved ? JSON.parse(saved) : false;\r\n  });\r\n\r\n  const [language, setLanguage] = useState(() => {\r\n    return localStorage.getItem('language') || 'en';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n    document.body.classList.toggle('dark-mode', isDarkMode);\r\n  }, [isDarkMode]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('language', language);\r\n  }, [language]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  const changeLanguage = (lang) => {\r\n    setLanguage(lang);\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={{\r\n      isDarkMode,\r\n      toggleDarkMode,\r\n      language,\r\n      changeLanguage\r\n    }}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGR,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACjD,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,KAAK;EAC1C,CAAC,CAAC;EAEF,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,MAAM;IAC7C,OAAOe,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI;EACjD,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACdc,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAACV,UAAU,CAAC,CAAC;IAC5DW,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEd,UAAU,CAAC;EACzD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBX,SAAS,CAAC,MAAM;IACdc,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3Bd,aAAa,CAACe,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/BV,WAAW,CAACU,IAAI,CAAC;EACnB,CAAC;EAED,oBACE3B,OAAA,CAACC,eAAe,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAC/BpB,UAAU;MACVe,cAAc;MACdR,QAAQ;MACRU;IACF,CAAE;IAAAnB,QAAA,EACCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACzB,GAAA,CArCWF,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}